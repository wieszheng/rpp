name: 🛠️ Build Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: 🔧 Setup and Build on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - name: 📦 Install npm dependencies
        run: |
          npm cache clean --force
          npm ci || npm install

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: 📦 Install uv
        run: |
          pip install uv

      - name: 📦 Install Python dependencies
        run: |
          uv sync

      - name: 🧪 Run tests
        run: |
          echo "Running basic tests..."
          python -c "import sys; print(f'Python version: {sys.version}')"
          node --version
          npm --version
          uv --version

      - name: 🏗️ Build application
        run: |
          npm run build

      - name: 🔍 Verify build artifacts
        run: |
          echo "Checking build directory contents:"
          ls -la build/ || echo "Build directory not found"
          echo "Looking for executable files:"
          find build/ -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" -o -name "*.app" || echo "No executable files found"
          echo "Build directory structure:"
          find build/ -type f || echo "No files found in build directory"

      - name: 🚀 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Build_${{ runner.os }}
          retention-days: 7
          path: |
            build/*.exe
            build/*.dmg
            build/*.AppImage
            build/*.deb
            build/*.rpm
            build/*.app
            dist/

      - name: 📋 Build Summary
        run: |
          echo "## Build Summary for ${{ runner.os }}" >> $GITHUB_STEP_SUMMARY
          echo "- OS: ${{ runner.os }}" >> $GITHUB_STEP_SUMMARY
          echo "- Python: 3.12" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js: 22" >> $GITHUB_STEP_SUMMARY
          echo "- Build completed: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- Build artifacts:" >> $GITHUB_STEP_SUMMARY
          if [ -d "build" ]; then
            find build/ -type f -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" -o -name "*.app" | while read file; do
              echo "  - $(basename "$file")" >> $GITHUB_STEP_SUMMARY
            done
          fi


